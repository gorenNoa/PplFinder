{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","hooks/usePeopleFetch.js","pages/Home/style.js","pages/Home/Home.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","setPageNumber","pageNumber","setCountriesFilterOn","countriesFilterOn","useState","hoveredUserId","setHoveredUserId","usersList","setUsersList","countriesList","setCountriesList","localStorage","getItem","JSON","parse","favoriteUsersList","setFavoriteUsersList","useLayoutEffect","length","observer","useRef","lastUserElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","handleMouseLeave","useEffect","axios","get","then","response","data","results","getUsersFromGivenCountry","includes","newCountries","filter","country","isUserInFavorite","userToCheck","find","user","login","uuid","map","index","ref","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","gender","dob","age","location","city","IconButton","onClick","userToAdd","newFavoriteList","setItem","stringify","addToFavorites","usePeopleFetch","setUsers","setIsLoading","fetchUsers","a","Home","Content","Header","Favorites","userToRemove","removeFavoriteUser","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","history","useHistory","AppBar","position","style","top","Tabs","_e","newValue","indicatorColor","textColor","Tab","push","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b3190786.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef, useCallback , useLayoutEffect} from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport axios from \"axios\";\r\n\r\nconst UserList = ({ users, isLoading, setPageNumber , pageNumber, countriesFilterOn, setCountriesFilterOn}) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [countriesList, setCountriesList] = useState([]);\r\n  // const LOCAL_STORAGE_KEY = \"favoriteUsers\";\r\n  const [favoriteUsersList, setFavoriteUsersList] = useState(() => {\r\n    if(localStorage.getItem(\"favoriteUsers\")){\r\n      return JSON.parse(localStorage.getItem(\"favoriteUsers\"));\r\n    }\r\n    // if there are no saved users\r\n    return [];\r\n  });\r\n  // before all the useEffect - set the filter stat\r\n  useLayoutEffect(() => {\r\n    if(countriesList.length > 0){\r\n      setCountriesFilterOn(true);\r\n    }\r\n    else{\r\n      setCountriesFilterOn(false);\r\n    }\r\n  }, [countriesList])\r\n\r\n  const observer = useRef();\r\n  // find the last user for the infinite scroll\r\n  const lastUserElementRef = useCallback( node => {\r\n    if(isLoading){\r\n      return;\r\n    }\r\n    // if we have observer (what we have in this iteration) - need to disconnect to get new\r\n    if(observer.current){\r\n      observer.current.disconnect();\r\n    }\r\n    // update the observer\r\n    observer.current = new IntersectionObserver(entries  => {\r\n      if(entries[0].isIntersecting){\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n      }\r\n    })\r\n    // if this is the last element\r\n    if(node){\r\n      observer.current.observe(node);\r\n    }\r\n  }, [isLoading]);\r\n  \r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  // if there is change in the countriesList - update the userList\r\n  useEffect(() => {\r\n      axios.get(`https://randomuser.me/api/?results=25&page=${pageNumber}&nat=${countriesList}`)\r\n      .then((response) => {\r\n        if(pageNumber > 1){\r\n          setUsersList([...usersList, ...response.data.results]);\r\n        }\r\n        else{\r\n          setUsersList(response.data.results);\r\n        }\r\n      });\r\n    }, [countriesList, pageNumber]);\r\n\r\n    \r\n    \r\n  // if there is change in the users (from usePeopleFetch) update the userList\r\n  useEffect(() => {\r\n    setUsersList([...usersList, ...users])\r\n    }, [users]);\r\n\r\n\r\n  const getUsersFromGivenCountry = (value) => {\r\n    // if need to add the country\r\n    if(!countriesList.includes(value)){\r\n      setCountriesList([...countriesList, value])\r\n    }\r\n    // if the country already exist and pressed again - need to delete it\r\n    else{\r\n      const newCountries = countriesList.filter(country => country !== value)\r\n      setCountriesList(newCountries)\r\n    }\r\n  };\r\n\r\n  /*\r\n    This function check if a given user is in the favorite list.\r\n    In case the return answer is true - the favorite icon is visible\r\n  */\r\n  const isUserInFavorite = (userToCheck) =>{\r\n    if(userToCheck !== null){\r\n      return favoriteUsersList.find(user => user.login.uuid === userToCheck.login.uuid);\r\n    }\r\n  };\r\n  const addToFavorites = (userToAdd) => {\r\n    var newFavoriteList;\r\n    if(!favoriteUsersList.includes(userToAdd)){\r\n      newFavoriteList = [...favoriteUsersList, userToAdd]\r\n    }\r\n    else{\r\n      newFavoriteList = favoriteUsersList.filter(user => user.login.uuid !== userToAdd.login.uuid)\r\n    }\r\n    setFavoriteUsersList(newFavoriteList)\r\n    localStorage.setItem(\"favoriteUsers\", JSON.stringify(newFavoriteList));\r\n  };\r\n\r\n  return (\r\n    users && (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={getUsersFromGivenCountry}/>\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={getUsersFromGivenCountry}/>\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={getUsersFromGivenCountry}/>\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={getUsersFromGivenCountry}/>\r\n        <CheckBox value=\"GB\" label=\"United Kingdom\" onChange={getUsersFromGivenCountry}/>\r\n      </S.Filters>\r\n      <S.List>\r\n        {usersList.map((user, index) => {\r\n          // if its the last user in scrolling (usersList.length === index + 1)\r\n          // return ref to the last user shown\r\n          // else null\r\n            return (\r\n              <S.User\r\n                ref={usersList.length === index + 1 ? lastUserElementRef : null}\r\n                key={index}\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.gender}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.dob.age}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper isVisible={index === hoveredUserId || isUserInFavorite(user)}>\r\n                  <IconButton onClick={() => addToFavorites(user)}>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n            );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>)\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ContactSupportOutlined } from \"@material-ui/icons\";\r\n\r\nexport const usePeopleFetch = (pageNumber, countriesFilterOn) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [pageNumber]);\r\n\r\n  async function fetchUsers() {\r\n    if(!countriesFilterOn){\r\n      setIsLoading(true);\r\n      const response = await axios.get(`https://randomuser.me/api/?results=25&page=${pageNumber}`);\r\n      setIsLoading(false);\r\n      setUsers([...users, ...response.data.results]);\r\n    }\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers};\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\nimport { useState } from \"react\";\r\n\r\nconst Home = () => {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [countriesFilterOn, setCountriesFilterOn] = useState(false);\r\n  const { users, isLoading} = usePeopleFetch(pageNumber, countriesFilterOn);\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} setPageNumber={setPageNumber} pageNumber = {pageNumber} countriesFilterOn={countriesFilterOn} setCountriesFilterOn={setCountriesFilterOn}/>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;","  import React from \"react\";\r\n  import Text from \"components/Text\";\r\n  import UserList from \"components/UserList\";\r\n  import { usePeopleFetch } from \"hooks\";\r\n  import * as S from \"./style\";\r\n  import { useState , useEffect} from \"react\";\r\n  import IconButton from \"@material-ui/core/IconButton\";\r\n  import FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n  import Spinner from \"components/Spinner\";\r\n  import CheckBox from \"components/CheckBox\";\r\n\r\n\r\n  const Favorites = () => {\r\n    const { users, isLoading } = usePeopleFetch();\r\n    const [favoriteUsersList, setFavoriteUsersList] = useState(() => {\r\n      if(localStorage.getItem(\"favoriteUsers\")){\r\n        return JSON.parse(localStorage.getItem(\"favoriteUsers\"));\r\n      }\r\n      // if there are no saved users\r\n      return [];\r\n    });\r\n    const removeFavoriteUser = (userToRemove) => {\r\n      if(userToRemove !== null){\r\n        var newFavoriteList = favoriteUsersList.filter(user => user.login.uuid !== userToRemove.login.uuid)\r\n        setFavoriteUsersList(newFavoriteList)\r\n        localStorage.setItem(\"favoriteUsers\", JSON.stringify(newFavoriteList));\r\n      }\r\n    };\r\n    return (\r\n      <S.Favorites>\r\n        <S.Content>\r\n          <S.Header>\r\n            <Text size=\"64px\" bold>\r\n              Favorite Users Page\r\n            </Text>\r\n          </S.Header>\r\n          {/* <UserList users={users} isLoading={isLoading} /> */}\r\n          <S.UserList>\r\n        <S.List>\r\n          {favoriteUsersList.map((user, index) => {\r\n            return (\r\n              <S.User\r\n                key={index}>\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.gender}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.dob.age}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper isVisible={true}>\r\n                  <IconButton onClick={() => removeFavoriteUser(user)}>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n            );\r\n          })}\r\n          {isLoading && (\r\n            <S.SpinnerWrapper>\r\n              <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n            </S.SpinnerWrapper>\r\n          )}\r\n        </S.List>\r\n      </S.UserList>\r\n        </S.Content>\r\n      </S.Favorites>\r\n    );\r\n  };\r\n\r\n  export default Favorites;\r\n","import React from \"react\";\r\nimport { createTheme , ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n    createTheme ({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Home from \"pages/Home/Home\";\r\nimport Favorites from \"pages/Favorites/Favorites\";\r\n\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} onClick={() => {history.push('/')}}/>\r\n        <Tab label=\"Favorites\" index={1} onClick={() => { history.push('/favorites')}}/>\r\n      </Tabs>\r\n      {/* {value === 0 && <Home />}\r\n      {value === 1 && <Favorites />} */}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport {Favorites} from \"pages\";\r\nimport { usePeopleFetch } from \"hooks\";\r\n\r\nconst AppRouter = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\"><Favorites users = {users} isLoading = {isLoading}/></Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}